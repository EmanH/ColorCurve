function ColorCurve(a){this.points=[];this.currentpoint=-1;this.c=document.getElementById(a);this.ctx=this.c.getContext("2d");this.height=this.c.height;this.width=this.c.width;this.redraw=0;this.values=[];this.rgb=[];if(this.height!=this.width)console.log("ERROR: Canvas must have same width and height.");else{this.points.push({x:0,y:0});this.points.push({x:0.25,y:0.25});this.points.push({x:0.75,y:0.75});this.points.push({x:1,y:1});var b=this;this.c.onmousedown=function(a){b.MouseDown(a)};this.c.onmouseup=
function(a){b.MouseUp(a);b.Draw()};this.c.onmouseout=function(a){b.MouseUp(a);b.Draw()};this.c.onmousemove=function(a){b.MouseMove(a);1==b.redraw&&(b.Draw(),b.redraw=0)};this.Draw();this.UpdateValues()}}ColorCurve.prototype.UpdateValues=function(){this.rgb.splice(0,this.rgb.length);for(var a=0;256>a;a++)this.rgb.push(Math.round(255*this.GetY(a/255)))};ColorCurve.prototype.IsEqual=function(a,b){return a.x==b.x&&a.y==b.y?!0:!1};
ColorCurve.prototype.Draw=function(){this.values.splice(0,this.values.length);this.ctx.clearRect(0,0,this.width,this.height);this.DrawGrid();for(i=0;i<this.points.length-1;i++)p1=1>i?this.points[0]:this.points[i-1],p4=i+2>this.points.length-1?this.points[i+1]:this.points[i+2],this.Quadratic(p1,this.points[i],this.points[i+1],p4);this.DrawPoints()};
ColorCurve.prototype.DrawGrid=function(){var a=this.width/4;this.ctx.beginPath();this.ctx.lineWidth=1;this.ctx.strokeStyle="#aaaaaa";for(i=0;i<this.height-a;i+=a)this.ctx.moveTo(0,i+a),this.ctx.lineTo(this.height,i+a);for(i=0;i<this.height-a;i+=a)this.ctx.moveTo(i+a,0),this.ctx.lineTo(i+a,this.height);this.ctx.stroke()};
ColorCurve.prototype.Quadratic=function(a,b,e,c){this.ctx.strokeStyle="#ffffff";this.ctx.lineWidth=1.5;var d=0;x0=b.x;x3=e.x;y0=b.y;y3=e.y;dx=x3-x0;dy=y3-y0;x1=2*x0/3+x3/3;x2=x0/3+2*x3/3;this.IsEqual(a,b)&&this.IsEqual(e,c)&&(y1=y0+dy/3,y2=y0+2*dy/3);this.IsEqual(a,b)&&!this.IsEqual(e,c)&&(d=(c.y-y0)/(c.x-x0),y2=y3-d*dx/3,y1=y0+(y2-y0)/2);!this.IsEqual(a,b)&&this.IsEqual(e,c)&&(d=(y3-a.y)/(x3-a.x),y1=y0+d*dx/3,y2=y3+(y1-y3)/2);!this.IsEqual(a,b)&&!this.IsEqual(e,c)&&(d=(y3-a.y)/(x3-a.x),y1=y0+d*dx/
3,d=(c.y-y0)/(c.x-x0),y2=y3-d*dx/3);this.ctx.beginPath();this.ctx.moveTo(x0*this.width,this.height-y0*this.height);step=(x3-x0)/20;tx=x0;for(a=0;1.05>=a;a+=0.05)ty=y0*Math.pow(1-a,3)+3*y1*Math.pow(1-a,2)*a+3*y2*(1-a)*a*a+y3*a*a*a,this.ctx.lineTo(tx*this.width,this.height-ty*this.height),this.values.push({x:tx,y:ty}),tx+=step;this.ctx.moveTo(0,this.height-this.points[0].y*this.height);this.ctx.lineTo(this.points[0].x*this.width,this.height-this.points[0].y*this.height);this.ctx.moveTo(this.points[3].x*
this.width,this.height-this.points[3].y*this.height);this.ctx.lineTo(this.width,this.height-this.points[3].y*this.height);this.ctx.stroke();return!0};ColorCurve.prototype.DrawPoints=function(){this.ctx.fillStyle="#ff0000";this.ctx.beginPath();for(i=0;i<this.points.length;i++)this.ctx.moveTo(this.points[i].x*this.width,this.height-this.points[i].y*this.height),this.ctx.arc(this.points[i].x*this.width,this.height-this.points[i].y*this.height,3,0,2*Math.PI,!1);this.ctx.fill()};
ColorCurve.prototype.MouseDown=function(a){a||(a=window.event);var b=(a.pageX-this.c.offsetLeft)/this.width;a=(a.pageY-this.c.offsetTop)/this.height;dis=1E4;punto=-1;for(i=0;i<this.points.length;i++)x1=b-this.points[i].x,y1=a-(1-this.points[i].y),tdis=x1*x1+y1*y1,tdis=Math.sqrt(tdis),tdis<dis&&(dis=tdis,punto=i);this.currentpoint=8>dis?punto:this.currentpoint};ColorCurve.prototype.MouseUp=function(){-1!=this.currentpoint&&this.UpdateValues();this.currentpoint=-1};
ColorCurve.prototype.MouseMove=function(a){-1!=this.currentpoint&&(prevx=0<this.currentpoint?this.points[this.currentpoint-1].x:0,nextx=this.currentpoint==this.points.length-1?1:this.points[this.currentpoint+1].x,x=(a.pageX-this.c.offsetLeft)/this.width,y=1-(a.pageY-this.c.offsetTop)/this.height,x>prevx&&x<nextx&&(this.points[this.currentpoint].x=x,this.points[this.currentpoint].y=y,this.redraw=1))};
ColorCurve.prototype.GetY=function(a){a<this.values[0].x&&(a=this.values[0].x);a>this.values[this.values.length-1].x&&(a=this.values[this.values.length-1].x);for(var b=0;b<this.values.length-2&&!(a>=this.values[b].x&&a<this.values[b+1].x);b++);a=this.values[b].y+(a-this.values[b].x)/(this.values[b+1].x-this.values[b].x)*(this.values[b+1].y-this.values[b].y);return 0>a?0:1<a?1:a};